# STATEMENT OF PROBLEM 

Given the root of a binary tree, invert the tree, and return its root.

==================================================================================================================================================================================

## SOLUTION OF CODE 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root==null||(root.left==null && root.right==null)) return root;
        TreeNode l=root.left;
        TreeNode r=root.right;
        root.right=invertTree(l);
        root.left=invertTree(r);
        return root;
    }
}

==================================================================================================================================================================================

## COMPLEXITIES :-

1.)TIME COMPLEXITY :- O(n)
2.)SPACE COMPLEXITY :- O(h) , h is height of tree .


==================================================================================================================================================================================
